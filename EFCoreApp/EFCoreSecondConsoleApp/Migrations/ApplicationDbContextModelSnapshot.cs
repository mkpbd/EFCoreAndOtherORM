// <auto-generated />
using System;
using EFCoreSecondConsoleApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreSecondConsoleApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreSecondConsoleApp.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Name = "Martin Fowler",
                            WebUrl = "http://ma"
                        },
                        new
                        {
                            AuthorId = 2,
                            Name = "Eric Evans",
                            WebUrl = "http://evenyour"
                        },
                        new
                        {
                            AuthorId = 3,
                            Name = "Future Person",
                            WebUrl = "http://futer"
                        });
                });

            modelBuilder.Entity("EFCoreSecondConsoleApp.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            Description = "Improving h",
                            PublishedOn = new DateTime(1990, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Refactoring"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            Description = "Written in d",
                            PublishedOn = new DateTime(2002, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Patterns of Enterprise Ap"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 2,
                            Description = "Linking bus",
                            PublishedOn = new DateTime(2003, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Domain-Driven Design"
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 3,
                            Description = "Entanged q",
                            PublishedOn = new DateTime(2003, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Quantum Networking"
                        });
                });

            modelBuilder.Entity("EFCoreSecondConsoleApp.Models.Book", b =>
                {
                    b.HasOne("EFCoreSecondConsoleApp.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
